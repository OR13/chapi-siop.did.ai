{"version":3,"sources":["pages/issuer/Issuer.js","pages/base/drawer.js","pages/base/base.js","store/history.js","serviceWorker.js","store/index.js","pages/wallet/frame/get/WalletFrameGet.js","pages/wallet/frame/store/WalletFrameStore.js","pages/wallet/proxy/store/WalletProxyStore.js","pages/index.js","pages/home/Home.js","pages/verifier/Verifier.js","components/ParticlesContainer/ParticlesContainer.js","pages/errors/404.js","store/create.js","index.js","fixtures/index.js","components/Theme/Theme.js"],"names":["Issuer","props","React","useState","state","setState","useEffect","a","chapi","console","error","variant","onClick","webCredentialWrapper","global","WebCredential","vp","navigator","credentials","store","result","log","JSON","stringify","DrawerContent","List","ListItem","button","history","push","ListItemIcon","ListItemText","primary","window","open","location","origin","useStyles","makeStyles","theme","root","display","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","children","classes","useTheme","setOpen","Theme","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","edge","href","style","cursor","textDecoration","Typography","Drawer","paper","direction","Divider","createBrowserHistory","Boolean","hostname","match","router","connectRouter","WebCredentialHandler","credentialHandlerPolyfill","WalletFrameGet","event","query","receiveCredentialEvent","credentialRequestOptions","web","VerifiablePresentation","Array","isArray","loadOnce","then","Fragment","Button","respondWith","Promise","resolve","dataType","data","base64url","require","queryString","routes","path","exact","component","__chapi__run__once","WALLET_LOCATION","workerUrl","url","registration","credentialManager","hints","set","name","enabledTypes","get","queryByExample","credential","verifiableCredential","handleStoreEvent","parsedQueryString","parse","search","status","vc","load","Grid","container","item","xs","gutterBottom","args","encode","type","from","parsed","decode","URL","redirect_uri","issuer","join","ParticlesContainer","params","this","particles","line_linked","shadow","enable","blur","top","Component","NotFound","pathname","appReducers","persistConfig","key","whitelist","storage","middlewares","thunk","routerMiddleware","createStore","persistReducer","combineReducers","rootReducer","composeWithDevTools","compose","applyMiddleware","withReduxEnhancer","persistor","persistStore","ReactDOM","render","map","document","getElementById","serviceWorker","ready","unregister","createMuiTheme","splashImage","palette","light","lighten","main","dark","darken","secondary"],"mappings":"iRAQaA,EAAS,SAACC,GAAW,IAAD,EACLC,IAAMC,SAAS,IADV,mBACxBC,EADwB,KACjBC,EADiB,KAY/B,OATAH,IAAMI,WAAU,WACd,sBAAC,sBAAAC,EAAA,+EAESC,MAFT,sDAIGC,QAAQC,MAAM,qBAAd,MAJH,uDAAD,KAOC,IAED,kBAAC,IAAD,KACE,kBAAC,IAAD,8DAGA,6BACA,6BACA,kBAAC,IAAD,CACEC,QAAS,YACTC,QAAO,sBAAE,8BAAAL,EAAA,6DACDM,EAAuB,IAAIC,EAAOC,cACtC,yBACAC,KAHK,SAMcC,UAAUC,YAAYC,MACzCN,GAPK,OAMDO,EANC,OASPX,QAAQY,IAAI,2CAA4CD,GACxDf,EAAS,2BAAKD,GAAN,IAAagB,YAVd,4CAFX,uBAiBA,6BAAME,KAAKC,UAAUnB,EAAO,KAAM,Q,22ECjCzB,SAASoB,IACtB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNf,QAAS,WACPgB,IAAQC,KAAK,OAGf,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAS,UAEzB,kBAACN,EAAA,EAAD,CACEC,QAAM,EACNf,QAAS,WACPqB,OAAOC,KACLD,OAAOE,SAASC,OACd,8EAIN,kBAACN,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAS,aAGzB,kBAACN,EAAA,EAAD,CACEC,QAAM,EACNf,QAAS,WACPqB,OAAOC,KAAK,+CAGd,kBAACJ,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAS,W,YCzBzBK,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,MAAO,QAETC,OAAQ,CACNC,OAAQL,EAAMK,OAAOC,OAAS,EAC9BC,WAAYP,EAAMQ,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQV,EAAMQ,YAAYE,OAAOC,MACjCC,SAAUZ,EAAMQ,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAfgB,IAgBhBZ,MAAM,eAAD,OAhBW,IAgBX,OACLI,WAAYP,EAAMQ,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQV,EAAMQ,YAAYE,OAAOC,MACjCC,SAAUZ,EAAMQ,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,KAAM,CACJjB,QAAS,QAEXI,OAAQ,CACNH,MA7BgB,IA8BhBiB,WAAY,EACZC,WAAY,UAEdC,WAAY,CACVnB,MAlCgB,IAmChBI,WAAYP,EAAMQ,YAAYC,OAAO,QAAS,CAC5CC,OAAQV,EAAMQ,YAAYE,OAAOC,MACjCC,SAAUZ,EAAMQ,YAAYI,SAASI,kBAGzCO,YAAY,aACVhB,WAAYP,EAAMQ,YAAYC,OAAO,QAAS,CAC5CC,OAAQV,EAAMQ,YAAYE,OAAOC,MACjCC,SAAUZ,EAAMQ,YAAYI,SAASC,gBAEvCW,UAAW,SACXrB,MAAOH,EAAMyB,QAAQ,GAAK,GACzBzB,EAAM0B,YAAYC,GAAG,MAAQ,CAC5BxB,MAAOH,EAAMyB,QAAQ,GAAK,IAG9BG,QAAQ,aACN1B,QAAS,OACT2B,WAAY,SACZC,eAAgB,WAChBC,QAAS/B,EAAMyB,QAAQ,EAAG,IAEvBzB,EAAMgC,OAAOJ,SAElBK,QAAS,CACPC,SAAU,EACVH,QAAS/B,EAAMyB,QAAQ,QAIZ,SAASU,EAAT,GAAmC,IAAD,IAAZC,EAAY,EAAZA,SAC7BC,EAAUvC,IACVE,EAAQsC,cAFiC,EAGvB3E,IAAMC,UAAS,GAHQ,mBAGxC+B,EAHwC,KAGlC4C,EAHkC,KAa/C,OACE,kBAACC,EAAA,EAAD,KACE,yBAAKC,UAAWJ,EAAQpC,MACtB,kBAACyC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACEC,SAAS,QACTH,UAAWI,YAAKR,EAAQjC,OAAT,eACZiC,EAAQvB,YAAcnB,KAGzB,kBAACmD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACX5E,QAtBa,WACvBkE,GAAQ,IAsBEW,KAAK,QACLT,UAAWI,YAAKR,EAAQpB,WAAT,eACZoB,EAAQlB,KAAOxB,KAGlB,kBAAC,IAAD,OAQF,uBACEwD,KAAMzD,OAAOE,SAASC,OACtBuD,MAAO,CACLC,OAAQ,UACRC,eAAgB,OAChBN,MAAO,YAGT,kBAACO,EAAA,EAAD,oBAGF,yBAAKH,MAAO,CAAElB,SAAU,OAI5B,kBAACsB,EAAA,EAAD,CACEpF,QAAQ,YACRqE,UAAWI,YAAKR,EAAQ/B,QAAT,mBACZ+B,EAAQf,WAAa3B,GADT,cAEZ0C,EAAQd,aAAe5B,GAFX,IAIf0C,QAAS,CACPoB,MAAOZ,aAAI,mBACRR,EAAQf,WAAa3B,GADb,cAER0C,EAAQd,aAAe5B,GAFf,MAMb,yBAAK8C,UAAWJ,EAAQT,SACtB,kBAACmB,EAAA,EAAD,CAAY1E,QA7DI,WACxBkE,GAAQ,KA6DuB,QAApBvC,EAAM0D,UACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,QAIN,kBAACC,EAAA,EAAD,MACA,kBAAC1E,EAAD,OAEF,0BAAMwD,UAAWJ,EAAQJ,SACvB,yBAAKQ,UAAWJ,EAAQT,UACvBQ,O,gCC1KX,YAEewB,mB,6ICWKC,QACW,cAA7BnE,OAAOE,SAASkE,UAEkB,UAA7BpE,OAAOE,SAASkE,UAEhBpE,OAAOE,SAASkE,SAASC,MAAM,2D,oGCdvB,GACbC,OAAQC,YAAc5E,M,4FCEoCK,OAApDwE,E,EAAAA,qBAAsBC,E,EAAAA,0BAEjBC,EAAiB,SAAC1G,GAAW,IAAD,EACbC,IAAMC,SAAS,CACvCyG,MAAO,GACPC,MAAO,KAH8B,mBAChCzG,EADgC,KACzBC,EADyB,KAsBvC,OAhBAH,IAAMI,WAAU,WAAM,4CACpB,gCAAAC,EAAA,sEACsBkG,EAAqBK,yBAD3C,OACQF,EADR,OAEEnG,QAAQY,IAAI,iCAAkCuF,GACxC5F,EAAK4F,EAAMG,yBAAyBC,IAAIC,uBACxCJ,EAAQK,MAAMC,QAAQnG,EAAG6F,OAAS7F,EAAG6F,MAAM,GAAK7F,EAAG6F,MAEzDxG,EAAS,2BACJD,GADG,IAENwG,QACAC,WATJ,4CADoB,sBAapBH,EAA0BU,WAAWC,MAbhB,WAAD,oCAcnB,IAGD,kBAAC,IAAMC,SAAP,KACE,kBAACxB,EAAA,EAAD,uBACA,kBAACyB,EAAA,EAAD,CACE3G,QAAS,WACPR,EAAMwG,MAAMY,YACV,IAAIC,SAAQ,SAACC,GACX,OAAOA,EAAQ,CAAEC,SAAU,WAAYC,KAAM,mBAJrD,UAWA,kBAACL,EAAA,EAAD,CACE5G,QAAS,YACT4E,MAAO,UACP3E,QAAS,WACPR,EAAMwG,MAAMY,YACVC,QAAQC,QAAQ,CACdC,SAAU,yBACVC,KAAM5G,SAPd,WAcA,6BAAMM,KAAKC,UAAUnB,EAAO,KAAM,M,SCnDlCyH,EAAYC,EAAQ,KACpBC,EAAcD,EAAQ,K,EAEgC7F,OAApDwE,E,EAAAA,qBAAsBC,E,EAAAA,0BCHxBmB,EAAYC,EAAQ,KACpBC,EAAcD,EAAQ,KCEfE,EAAS,CACpB,CAAEC,KAAM,IAAKC,OAAO,EAAMC,UCFR,SAAClI,GA4BnB,OA3BAC,IAAMI,WAAU,WACT2B,OAAOmG,oBACV,sBAAC,gCAAA7H,EAAA,+EAESC,MAFT,cAGS6H,EAAkBpG,OAAOG,OACzBkG,EAJT,UAIwBD,EAJxB,yBAK8B5B,IAAoC,CAC7D8B,IAAKD,IANV,cAKSE,EALT,iBAQSA,EAAaC,kBAAkBC,MAAMC,IAAI,OAAQ,CACrDC,KAAM,WACNC,aAAc,CACZ,yBACA,uBACA,gCAbP,QAgBGpI,QAAQY,IAAI,sBAhBf,kDAkBGZ,QAAQC,MAAM,qBAAd,MAlBH,yDAAD,GAsBFuB,OAAOmG,oBAAqB,KAI5B,kBAAC,IAAD,KACE,kBAACb,EAAA,EAAD,CACE5G,QAAS,YACTC,QAAS,WACPgB,IAAQC,KAAK,aAHjB,mBAQA,6BACA,6BACA,kBAAC0F,EAAA,EAAD,CACE5G,QAAS,YACTC,QAAS,WACPgB,IAAQC,KAAK,eAHjB,yBDrCJ,CAAEoG,KAAM,UAAWC,OAAO,EAAMC,UAAWnI,KAC3C,CAAEiI,KAAM,YAAaC,OAAO,EAAMC,UERZ,SAAClI,GAAW,IAAD,EACPC,IAAMC,SAAS,IADR,mBAC1BC,EAD0B,KACnBC,EADmB,KAGjC,OACE,kBAAC,IAAD,KACE,kBAACyF,EAAA,EAAD,kEAGA,6BACA,6BACA,kBAACyB,EAAA,EAAD,CACE5G,QAAS,YACTC,QAAO,sBAAE,4BAAAL,EAAA,sEACcU,UAAUC,YAAY4H,IAAIC,KADxC,OACD3H,EADC,OAEPf,EAAS,2BACJD,GADG,IAENgB,YAJK,4CAFX,uBAaA,6BAAME,KAAKC,UAAUnB,EAAO,KAAM,OFdtC,CAAE6H,KAAM,oBAAqBC,OAAO,EAAMC,UAAWxB,GACrD,CAAEsB,KAAM,sBAAuBC,OAAO,EAAMC,UFHd,SAAClI,GAAW,IAAD,EACfC,IAAMC,SAAS,CACvC6I,WAAY,CAAEpB,KAAM5G,IAAGiI,qBAAqB,MAFL,mBAClC7I,EADkC,KAC3BC,EAD2B,KA2CzC,OAtCAH,IAAMI,WAAU,WACd,IAAM4I,EAAgB,uCAAG,oCAAA3I,EAAA,sEACHkG,EAAqBK,yBADlB,UACjBF,EADiB,OAEvBnG,QAAQY,IAAI,0BAA2BC,KAAKC,UAAUqF,EAAO,KAAM,MAE7DuC,EAAoBpB,EAAYqB,MAAMnH,OAAOE,SAASkH,SAEtCC,QAAuC,aAA7BH,EAAkBG,OAN3B,uBAOrB7I,QAAQY,IAAI,sCAPS,kBAQduF,EAAMY,YACX,IAAIC,SAAQ,SAACC,GACX,OAAOA,EAAQ,CAAEC,SAAU,WAAYC,KAAM,gBAV5B,OAejBoB,EAAapC,EAAMoC,WAEnBhI,EAAKgI,EAAWpB,KAGpB2B,EADEvI,EAAGiI,qBACA/B,MAAMC,QAAQnG,EAAGiI,sBAClBjI,EAAGiI,qBAAqB,GACxBjI,EAAGiI,qBAEFjI,EAGPX,EAAS,2BACJD,GADG,IAENwG,QACAoC,aACAO,QA/BqB,4CAAH,qDAmCtB7C,EAA0B8C,OAAOnC,KAAK6B,KACrC,IAED,yBAAKvD,MAAO,CAAErB,QAAS,QACrB,kBAACmF,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC9D,EAAA,EAAD,CAAY+D,cAAY,GAAxB,iDAGA,kBAACtC,EAAA,EAAD,CACE5G,QAAS,YACT4E,MAAO,UACPI,MAAO,CAAElC,YAAa,OACtB7C,QAAS,WAEPR,EAAMwG,MAAMY,YACV,IAAIC,SAAQ,SAACC,GACX,OAAOA,EAAQ,CAAEC,SAAU,WAAYC,KAAM,iBARrD,kBAeA,kBAACL,EAAA,EAAD,CACE5G,QAAS,YACT4E,MAAO,UACPI,MAAO,CAAElC,YAAa,OACtB7C,QAAS,WAEP,IAAMkJ,EAAI,wBACR7H,OAAOE,SAASuD,KADR,eAEHmC,EAAUkC,OAAOzI,KAAKC,UAAUnB,EAAM4I,WAAWpB,QACxD3F,OAAOE,SAASuD,KAAO,sBAAwBoE,IATnD,oBAcA,kBAACvC,EAAA,EAAD,CACE3G,QAAS,WACPR,EAAMwG,MAAMY,YACV,IAAIC,SAAQ,SAACC,GACX,OAAOA,EAAQ,CAAEC,SAAU,WAAYC,KAAM,mBAJrD,WAYF,kBAAC6B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,6BAAMtI,KAAKC,UAAUnB,EAAO,KAAM,SExF1C,CAAE6H,KAAM,oBAAqBC,OAAO,EAAMC,UAAWxB,GACrD,CAAEsB,KAAM,sBAAuBC,OAAO,EAAMC,UDPd,SAAClI,GAAW,IAAD,EACfC,IAAMC,SAAS,CACvCoJ,GAAI,CACFS,KAAM,CAAC,KAETC,KAAM,KALiC,mBAClC7J,EADkC,KAC3BC,EAD2B,KAiBzC,OAVAH,IAAMI,WAAU,WACd,IAAM4J,EAASnC,EAAYqB,MAAMnH,OAAOE,SAASkH,QAC3CE,EAAKjI,KAAK8H,MAAMvB,EAAUsC,OAAOD,EAAOX,KACxCU,EAAO,IAAIG,IAAIF,EAAOG,cAC5BhK,EAAS,2BACJ6J,GADG,IAEND,KAAMA,EAAK7H,OACXmH,UAED,IAED,kBAAC,IAAD,KACE,kBAACzD,EAAA,EAAD,CAAY+D,cAAY,GAAxB,kDAGA,kBAAC/D,EAAA,EAAD,CAAY+D,cAAY,GAAxB,oBAA2CzJ,EAAM6J,MACjD,kBAACnE,EAAA,EAAD,CAAY+D,cAAY,GAAxB,sBAA6CzJ,EAAMmJ,GAAGe,QACtD,kBAACxE,EAAA,EAAD,CAAY+D,cAAY,GAAxB,oBACoBzJ,EAAMmJ,GAAGS,KAAKO,KAAK,MAGvC,kBAAChD,EAAA,EAAD,CACE5G,QAAS,YACTC,QAAS,WACPqB,OAAOE,SAASuD,KAAOtF,EAAMiK,aAAe,qBAHhD,W,yDIlCOG,GAAb,uKAEI,IAAMC,EAASC,KAAKzK,MAAMwK,QAAU,CAClCE,UAAW,CACTC,YAAa,CACXC,OAAQ,CACNC,QAAQ,EACRvF,MAAO,UACPwF,KAAM,MAKd,OACE,kBAAC,IAAMzD,SAAP,KACE,yBACE3B,MAAO,CACL/C,OAAQ,EACRuC,SAAU,aAGXuF,KAAKzK,MAAM0E,UAGd,kBAAC,IAAD,CACEK,UAAU,YACVW,MAAO,CACL/C,OAAQ,EACRoI,IAAK,EACL7F,SAAU,YAEZsF,OAAQA,SA/BlB,GAAwCQ,aCI3BC,I,OAAb,uKAEI,OACE,kBAACnG,EAAA,EAAD,KACE,yBAAKC,UAAU,YACb,kBAAC,GAAD,KACE,yBAAKA,UAAU,OAAOW,MAAO,CAAErB,QAAS,SACtC,kBAACwB,EAAA,EAAD,CAAYnF,QAAQ,MAApB,OACA,kBAACmF,EAAA,EAAD,KACG7D,OAAOE,SAASgJ,SADnB,oBAGA,6BACA,kBAAC5D,EAAA,EAAD,CACE5G,QAAQ,YACR4E,MAAO,YACP3E,QAAS,WACPqB,OAAOE,SAASuD,KAAO,eAJ3B,mBAZd,GAA8BuF,c,GCEf,WAAuB,IAAtBG,EAAqB,uDAAP,GAEtBC,EAAgB,CACpBC,IAAK,OACLC,UAAW,CAAC,UACZC,aAGIC,EAAc,CAACC,IAAOC,YAAiB/J,MAS7C,IAAMT,EAAQyK,sBACZC,YACER,EACAS,0BAAgB,2BAAKC,GAAgBX,KAEvCY,8BACEC,kBAAQC,kBAAe,WAAf,EAAmBT,GAAcU,OAKvCC,EAAYC,YAAalL,GAC/B,MAAO,CACLA,QACAiL,YACAxK,aC1BkCgK,GAA9BzK,G,GAAAA,MAAOiL,G,GAAAA,UAAWxK,G,GAAAA,QAE1B0K,IAASC,OACP,kBAAC,IAAD,CAAUpL,MAAOA,IACf,kBAAC,cAAD,CAAaiL,UAAWA,IACtB,kBAAC,IAAD,CAAiBxK,QAASA,IACxB,kBAAC,IAAD,KACGoG,EAAOwE,KAAI,gBAAGtE,EAAH,EAAGA,MAAOD,EAAV,EAAUA,KAAME,EAAhB,EAAgBA,UAAhB,OACV,kBAAC,IAAD,CAAOmD,IAAKrD,EAAMC,MAAOA,EAAOD,KAAMA,EAAME,UAAWA,OAEzD,kBAAC,IAAD,CAAOF,KAAK,IAAIsE,OAAQ,kBAAM,kBAAC,GAAD,aAKtCE,SAASC,eAAe,SX8FpB,kBAAmBzL,WACrBA,UAAU0L,cAAcC,MAAMvF,MAAK,SAACmB,GAClCA,EAAaqE,iB,gCYhInB,wEAAM7L,EAAK8G,EAAQ,KACbiB,EAAiBjB,EAAQ,M,6GCUzB/C,E,uKACM,IACAJ,EAAa+F,KAAKzK,MAAlB0E,SACFpC,EAAQuK,YAAe,CAC3BC,YAAa,GACbC,QAAS,CACPhD,KAAM,QACNhI,QAAS,CACPiL,MAAOC,kBAXI,OAWkB,KAC7BC,KAZW,OAaXC,KAAMC,iBAbK,OAagB,MAE7BC,UAAW,CACTL,MAAOC,kBAfM,OAekB,KAC/BC,KAhBa,OAiBbC,KAAMC,iBAjBO,OAiBgB,SAInC,OAAO,kBAAC,IAAD,CAAkB9K,MAAOA,GAAQoC,O,GAnBxBsG,aA2BLlG,Q","file":"static/js/main.af580e9f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Base from \"../base/base\";\nimport * as chapi from \"credential-handler-polyfill\";\nimport { vp } from \"../../fixtures\";\n\nexport const Issuer = (props) => {\n  const [state, setState] = React.useState({});\n\n  React.useEffect(() => {\n    (async () => {\n      try {\n        await chapi.loadOnce();\n      } catch (e) {\n        console.error(\"Error in loadOnce:\", e);\n      }\n    })();\n  }, []);\n  return (\n    <Base>\n      <Typography>\n        This website is offering you a Verifiable Credential.\n      </Typography>\n      <br />\n      <br />\n      <Button\n        variant={\"contained\"}\n        onClick={async () => {\n          const webCredentialWrapper = new global.WebCredential(\n            \"VerifiablePresentation\",\n            vp\n          );\n          // Use Credential Handler API to store\n          const result = await navigator.credentials.store(\n            webCredentialWrapper\n          );\n          console.log(\"Result of receiving via store() request:\", result);\n          setState({ ...state, result });\n        }}\n      >\n        Receive Credentials\n      </Button>\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n    </Base>\n  );\n};\n\nIssuer.propTypes = {\n  wallet: PropTypes.any,\n};\n","import React from \"react\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\nimport history from \"../../store/history\";\n\nexport default function DrawerContent() {\n  return (\n    <List>\n      <ListItem\n        button\n        onClick={() => {\n          history.push(\"/\");\n        }}\n      >\n        <ListItemIcon>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"Home\"} />\n      </ListItem>\n      <ListItem\n        button\n        onClick={() => {\n          window.open(\n            window.location.origin +\n              \"/did:meme:1zgswzdje885tzr8408m37sjmaa0sthw265ty6hmwzmau48kd809zzrgra4w5w\"\n          );\n        }}\n      >\n        <ListItemIcon>\n          <BeachAccessIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"Example\"} />\n      </ListItem>\n\n      <ListItem\n        button\n        onClick={() => {\n          window.open(\"https://github.com/OR13/chapi-siop.did.ai\");\n        }}\n      >\n        <ListItemIcon>\n          <CodeIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"Code\"} />\n      </ListItem>\n    </List>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nimport Theme from \"../../components/Theme/Theme\";\n// import logo from \"../../assets/peepo.png\";\n\n// import Menu from \"./menu\";\nimport DrawerContent from \"./drawer\";\nimport { Typography } from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer({ children }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Theme>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: open,\n              })}\n            >\n              <MenuIcon />\n            </IconButton>\n            {/* <img\n              src={logo}\n              alt={\"logo\"}\n              className={classes.title}\n              style={{ height: \"28px\", paddingRight: \"16px\" }}\n            /> */}\n            <a\n              href={window.location.origin}\n              style={{\n                cursor: \"pointer\",\n                textDecoration: \"none\",\n                color: \"inherit\",\n              }}\n            >\n              <Typography>CHAPI-SIOP</Typography>\n            </a>\n\n            <div style={{ flexGrow: 1 }}></div>\n            {/* <Menu /> */}\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"rtl\" ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <DrawerContent />\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {children}\n        </main>\n      </div>\n    </Theme>\n  );\n}\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { connectRouter } from \"connected-react-router\";\n\nimport history from \"./history\";\n\nexport default {\n  router: connectRouter(history),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { vp } from \"../../../../fixtures\";\n\nconst { WebCredentialHandler, credentialHandlerPolyfill } = window;\n\nexport const WalletFrameGet = (props) => {\n  const [state, setState] = React.useState({\n    event: {},\n    query: {},\n  });\n\n  React.useEffect(() => {\n    async function handleGetEvent() {\n      const event = await WebCredentialHandler.receiveCredentialEvent();\n      console.log(\"Wallet processing get() event:\", event);\n      const vp = event.credentialRequestOptions.web.VerifiablePresentation;\n      const query = Array.isArray(vp.query) ? vp.query[0] : vp.query;\n\n      setState({\n        ...state,\n        event,\n        query,\n      });\n    }\n    credentialHandlerPolyfill.loadOnce().then(handleGetEvent);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Typography>WalletFrameGet</Typography>\n      <Button\n        onClick={() => {\n          state.event.respondWith(\n            new Promise((resolve) => {\n              return resolve({ dataType: \"Response\", data: \"canceled\" });\n            })\n          );\n        }}\n      >\n        Cancel\n      </Button>\n      <Button\n        variant={\"contained\"}\n        color={\"primary\"}\n        onClick={() => {\n          state.event.respondWith(\n            Promise.resolve({\n              dataType: \"VerifiablePresentation\",\n              data: vp,\n            })\n          );\n        }}\n      >\n        Confirm\n      </Button>\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n    </React.Fragment>\n  );\n};\n\nWalletFrameGet.propTypes = {\n  wallet: PropTypes.any,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { vp } from \"../../../../fixtures\";\n\nconst base64url = require(\"base64url\");\nconst queryString = require(\"query-string\");\n\nconst { WebCredentialHandler, credentialHandlerPolyfill } = window;\n\nexport const WalletFrameStore = (props) => {\n  const [state, setState] = React.useState({\n    credential: { data: vp.verifiableCredential[0] },\n  });\n\n  React.useEffect(() => {\n    const handleStoreEvent = async () => {\n      const event = await WebCredentialHandler.receiveCredentialEvent();\n      console.log(\"Store Credential Event:\", JSON.stringify(event, null, 2));\n\n      const parsedQueryString = queryString.parse(window.location.search);\n\n      if (parsedQueryString.status && parsedQueryString.status === \"accepted\") {\n        console.log(\"Remote Wallet Accepted Credential.\");\n        return event.respondWith(\n          new Promise((resolve) => {\n            return resolve({ dataType: \"Response\", data: \"result\" });\n          })\n        );\n      }\n\n      const credential = event.credential;\n      // Display the credential details, for confirmation\n      const vp = credential.data;\n      let vc;\n      if (vp.verifiableCredential) {\n        vc = Array.isArray(vp.verifiableCredential)\n          ? vp.verifiableCredential[0]\n          : vp.verifiableCredential;\n      } else {\n        vc = vp;\n      }\n\n      setState({\n        ...state,\n        event,\n        credential,\n        vc,\n      });\n    };\n\n    credentialHandlerPolyfill.load().then(handleStoreEvent);\n  }, []);\n  return (\n    <div style={{ padding: \"8px\" }}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography gutterBottom>\n            Where would you like to save this credential?\n          </Typography>\n          <Button\n            variant={\"contained\"}\n            color={\"primary\"}\n            style={{ marginRight: \"8px\" }}\n            onClick={() => {\n              // store credential data... here... state.credential.data\n              state.event.respondWith(\n                new Promise((resolve) => {\n                  return resolve({ dataType: \"Response\", data: \"result\" });\n                })\n              );\n            }}\n          >\n            In This Wallet\n          </Button>\n          <Button\n            variant={\"contained\"}\n            color={\"primary\"}\n            style={{ marginRight: \"8px\" }}\n            onClick={() => {\n              // store credential data... here... state.credential.data\n              const args = `?redirect_uri=${\n                window.location.href\n              }&vc=${base64url.encode(JSON.stringify(state.credential.data))}`;\n              window.location.href = \"/wallet/proxy/store\" + args;\n            }}\n          >\n            In Remote Wallet\n          </Button>\n          <Button\n            onClick={() => {\n              state.event.respondWith(\n                new Promise((resolve) => {\n                  return resolve({ dataType: \"Response\", data: \"canceled\" });\n                })\n              );\n            }}\n          >\n            Cancel\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <pre>{JSON.stringify(state, null, 2)}</pre>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nWalletFrameStore.propTypes = {\n  wallet: PropTypes.any,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Base from \"../../../base/base\";\n\nimport { Typography } from \"@material-ui/core\";\n\nconst base64url = require(\"base64url\");\nconst queryString = require(\"query-string\");\n\nexport const WalletProxyStore = (props) => {\n  const [state, setState] = React.useState({\n    vc: {\n      type: [\"\"],\n    },\n    from: \"\",\n  });\n  React.useEffect(() => {\n    const parsed = queryString.parse(window.location.search);\n    const vc = JSON.parse(base64url.decode(parsed.vc));\n    const from = new URL(parsed.redirect_uri);\n    setState({\n      ...parsed,\n      from: from.origin,\n      vc,\n    });\n  }, []);\n  return (\n    <Base>\n      <Typography gutterBottom>\n        Are you sure you want to save this credential:\n      </Typography>\n      <Typography gutterBottom>Offered by Type: {state.from}</Typography>\n      <Typography gutterBottom>Credential Issuer: {state.vc.issuer}</Typography>\n      <Typography gutterBottom>\n        Credential Type: {state.vc.type.join(\" \")}\n      </Typography>\n\n      <Button\n        variant={\"contained\"}\n        onClick={() => {\n          window.location.href = state.redirect_uri + \"?status=accepted\";\n        }}\n      >\n        Yes\n      </Button>\n    </Base>\n  );\n};\n\nWalletProxyStore.propTypes = {\n  wallet: PropTypes.any,\n};\n","import { Home } from \"./home\";\n\nimport { Issuer } from \"./issuer\";\nimport { Verifier } from \"./verifier\";\n\nimport { WalletFrameGet } from \"./wallet/frame/get\";\nimport { WalletFrameStore } from \"./wallet/frame/store\";\n\nimport { WalletProxyGet } from \"./wallet/proxy/get\";\nimport { WalletProxyStore } from \"./wallet/proxy/store\";\n\nexport const routes = [\n  { path: \"/\", exact: true, component: Home },\n  { path: \"/issuer\", exact: true, component: Issuer },\n  { path: \"/verifier\", exact: true, component: Verifier },\n  { path: \"/wallet/frame/get\", exact: true, component: WalletFrameGet },\n  { path: \"/wallet/frame/store\", exact: true, component: WalletFrameStore },\n  { path: \"/wallet/proxy/get\", exact: true, component: WalletFrameGet },\n  { path: \"/wallet/proxy/store\", exact: true, component: WalletProxyStore },\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport * as chapi from \"credential-handler-polyfill\";\nimport * as WebCredentialHandler from \"web-credential-handler\";\n\nimport Base from \"../base/base\";\n\nimport history from \"../../store/history\";\n\nexport const Home = (props) => {\n  React.useEffect(() => {\n    if (!window.__chapi__run__once) {\n      (async () => {\n        try {\n          await chapi.loadOnce();\n          const WALLET_LOCATION = window.origin;\n          const workerUrl = `${WALLET_LOCATION}/worker.html`;\n          const registration = await WebCredentialHandler.installHandler({\n            url: workerUrl,\n          });\n          await registration.credentialManager.hints.set(\"test\", {\n            name: \"TestUser\",\n            enabledTypes: [\n              \"VerifiablePresentation\",\n              \"VerifiableCredential\",\n              \"UniversityDegreeCredential\",\n            ],\n          });\n          console.log(\"Wallet registered.\");\n        } catch (e) {\n          console.error(\"Error in loadOnce:\", e);\n        }\n      })();\n    }\n    window.__chapi__run__once = true;\n  });\n\n  return (\n    <Base>\n      <Button\n        variant={\"contained\"}\n        onClick={() => {\n          history.push(\"/issuer\");\n        }}\n      >\n        Get Credentials\n      </Button>\n      <br />\n      <br />\n      <Button\n        variant={\"contained\"}\n        onClick={() => {\n          history.push(\"/verifier\");\n        }}\n      >\n        Verify Credentials\n      </Button>\n    </Base>\n  );\n};\n\nHome.propTypes = {\n  wallet: PropTypes.any,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Base from \"../base/base\";\nimport { queryByExample } from \"../../fixtures\";\nexport const Verifier = (props) => {\n  const [state, setState] = React.useState({});\n\n  return (\n    <Base>\n      <Typography>\n        This website wants you to present Verifiable Credentials.\n      </Typography>\n      <br />\n      <br />\n      <Button\n        variant={\"contained\"}\n        onClick={async () => {\n          const result = await navigator.credentials.get(queryByExample);\n          setState({\n            ...state,\n            result,\n          });\n        }}\n      >\n        Provide Credentials\n      </Button>\n\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n    </Base>\n  );\n};\n\nVerifier.propTypes = {\n  wallet: PropTypes.any,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Particles from 'react-particles-js';\n\nexport class ParticlesContainer extends Component {\n  render() {\n    const params = this.props.params || {\n      particles: {\n        line_linked: {\n          shadow: {\n            enable: true,\n            color: '#3CA9D1',\n            blur: 5,\n          },\n        },\n      },\n    };\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            zIndex: 2,\n            position: 'absolute',\n          }}\n        >\n          {this.props.children}\n        </div>\n\n        <Particles\n          className=\"Particles\"\n          style={{\n            zIndex: 1,\n            top: 0,\n            position: 'absolute',\n          }}\n          params={params}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nParticlesContainer.propTypes = {\n  params: PropTypes.object,\n  children: PropTypes.any,\n};\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Theme from '../../components/Theme/Theme';\n\nimport { ParticlesContainer } from '../../components/ParticlesContainer';\n\nimport './404.css';\n\nexport class NotFound extends Component {\n  render() {\n    return (\n      <Theme>\n        <div className=\"notFound\">\n          <ParticlesContainer>\n            <div className=\"copy\" style={{ padding: '32px' }}>\n              <Typography variant=\"h1\">404</Typography>\n              <Typography>\n                {window.location.pathname} page not found.\n              </Typography>\n              <br />\n              <Button\n                variant=\"contained\"\n                color={'secondary'}\n                onClick={() => {\n                  window.location.href = '/workbench';\n                }}\n              >\n                Go Home\n              </Button>\n            </div>\n          </ParticlesContainer>\n        </div>\n      </Theme>\n    );\n  }\n}\n\nexport default NotFound;\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport storage from \"redux-persist/lib/storage\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport withReduxEnhancer from \"addon-redux/enhancer\";\n\nimport rootReducer from \".\";\nimport history from \"./history\";\n\nexport default (appReducers = {}) => {\n  // Persistance configuration\n  const persistConfig = {\n    key: \"root\",\n    whitelist: [\"wallet\"],\n    storage,\n  };\n\n  const middlewares = [thunk, routerMiddleware(history)];\n\n  // TODO: refactor for production\n  if (process.env.NODE_ENV !== \"production\") {\n    // const reduxListener = createStorybookListener();\n    // middlewares.push(reduxListener);\n  }\n\n  // Store.\n  const store = createStore(\n    persistReducer(\n      persistConfig,\n      combineReducers({ ...rootReducer, ...appReducers })\n    ),\n    composeWithDevTools(\n      compose(applyMiddleware(...middlewares), withReduxEnhancer)\n    )\n  );\n\n  // Persistor.\n  const persistor = persistStore(store);\n  return {\n    store,\n    persistor,\n    history,\n  };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport createStore from \"./store/create\";\n\nimport { routes } from \"./pages\";\n\nimport { NotFound } from \"./pages/errors/404\";\n\nconst { store, persistor, history } = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <ConnectedRouter history={history}>\n        <Switch>\n          {routes.map(({ exact, path, component }) => (\n            <Route key={path} exact={exact} path={path} component={component} />\n          ))}\n          <Route path=\"*\" render={() => <NotFound />} />\n        </Switch>\n      </ConnectedRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const vp = require(\"./vp.json\");\nconst queryByExample = require(\"./queryByExample.json\");\n\nexport { vp, queryByExample };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\n\n// https://favicon.io/favicon-generator/\nconst primaryColor = \"#052\";\nconst secondaryColor = \"#F80\";\n\nclass Theme extends Component {\n  render() {\n    const { children } = this.props;\n    const theme = createMuiTheme({\n      splashImage: \"\",\n      palette: {\n        type: \"light\",\n        primary: {\n          light: lighten(primaryColor, 0.07),\n          main: primaryColor,\n          dark: darken(primaryColor, 0.07),\n        },\n        secondary: {\n          light: lighten(secondaryColor, 0.07),\n          main: secondaryColor,\n          dark: darken(secondaryColor, 0.07),\n        },\n      },\n    });\n    return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n  }\n}\n\nTheme.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default Theme;\n"],"sourceRoot":""}